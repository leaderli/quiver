{
  "title": "js",
  "cells": [
    {
      "type": "text",
      "data": "\n\n\n\n\n\n<!--StartFragment-->\n\n<div style=\"direction:ltr;border-width:100%\">\n\n<div style=\"direction:ltr;margin-top:0in;margin-left:0in;width:8.0381in\">\n\n<div style=\"direction:ltr;margin-top:0in;margin-left:0in;width:8.0381in\">\n\n<p style=\"margin: 0in;\"><span style=\"font-weight: bold;\"><font face=\"Menlo\">标准对象</font></span></p>\n\n<p style=\"margin: 0in;\"><span style=\"background:white\"><font face=\"Menlo\">总结一下，有这么几条规则需要遵守：</font></span></p><p style=\"margin: 0in;\"><ul><li>不要使用new Number()、new Boolean()、new String()创建包装对象；<br></li><li>用parseInt()或parseFloat()来转换任意类型到number；<br></li><li>用String()来转换任意类型到string，或者直接调用某个对象的toString()方法；<br></li><li>通常不必把任意类型转换为boolean再判断，因为可以直接写if (myVar) {...}；<br></li><li>typeof操作符可以判断出number、boolean、string、function和undefined；<br></li><li>判断Array要使用Array.isArray(arr)；<br></li><li>判断null请使用myVar === null；<br></li><li>判断某个全局变量是否存在用typeof window.myVar === 'undefined'；<br></li><li>函数内部判断某个变量是否存在用typeof myVar === 'undefined'。<br></li></ul></p><p style=\"margin: 0in;\"><span style=\"background:white\"></span></p><p style=\"margin: 0in;\"><span style=\"background:white\"><font face=\"Menlo\"><br></font></span></p>\n\n<p style=\"margin:0in\"><font face=\"Menlo\"><span style=\"background-color: white;\" lang=\"en-US\">最后有细心的同学指出，任何对象都有</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">toString()</span><span style=\"background-color: white;\" lang=\"zh-CN\">方法吗？</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">null</span><span style=\"background-color: white;\" lang=\"zh-CN\">和</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">undefined</span><span style=\"background-color: white;\" lang=\"zh-CN\">就没有！确实如此，这两个特殊值要除外,虽然</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">null</span><span style=\"background-color: white;\" lang=\"zh-CN\">还伪装成了</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">object</span><span style=\"background-color: white;\" lang=\"zh-CN\">类型。</span></font></p><p style=\"margin:0in\"><span style=\"background-color: white;\" lang=\"zh-CN\"><font face=\"Menlo\"><br></font></span></p>\n\n<p style=\"margin:0in\"><font face=\"Menlo\"><span style=\"background-color: white;\" lang=\"en-US\">更细心的同学指出，</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">number</span><span style=\"background-color: white;\" lang=\"zh-CN\">对象调用</span><span style=\"color: rgb(122, 122, 122); background-color: white;\" lang=\"zh-CN\">toString()</span><span style=\"background-color: white;\" lang=\"zh-CN\">报SyntaxError：</span></font></p></div></div></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "123.toString(); // SyntaxError"
    },
    {
      "type": "text",
      "data": "<div>遇到这种情况，要特殊处理一下：</div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "123..toString(); // '123', 注意是两个点！\n(123).toString(); // '123'"
    },
    {
      "type": "text",
      "data": "<span style=\"font-family: 'Microsoft YaHei'; font-size: 15px;\">不要问为什么，这就是JavaScript代码的乐趣！</span>"
    },
    {
      "type": "text",
      "data": "<p cid=\"n52\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block md-focus\" cid=\"n53\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"strong\" class=\"md-expand\" style=\"box-sizing: border-box;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\"><b><font face=\"Menlo\">JSON</font></b></span></span></span></p><p cid=\"n54\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative;\"><span class=\"md-line md-end-block\" cid=\"n55\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><font face=\"Menlo\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\">在JSON中，一共就这么几种数据类型,并且，JSON还定死了字符集必须是UTF-8，表示多语言就没有问题了。为了统一解析，JSON的字符串规定必须用双引号<span style=\"background-color: rgb(248, 248, 248);\"><font color=\"#009051\">\"\"</font></span></span><span md-inline=\"plain\" style=\"box-sizing: border-box;\">，Object的键也必须用双引号<span style=\"background-color: rgb(248, 248, 248);\"><font color=\"#009051\">\"\"</font></span></span><span md-inline=\"plain\" style=\"box-sizing: border-box;\">。</span></font></span><span class=\"md-line md-end-block\" cid=\"n55\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\"><span class=\"md-line md-end-block\" cid=\"n55\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><ul><li><font face=\"Menlo\"><font color=\"#009051\">number</font>：和JavaScript的number完全一致；<br></font></li><li><font face=\"Menlo\"><font color=\"#009051\">boolean</font>：就是JavaScript的true或false；<br></font></li><li><font face=\"Menlo\"><font color=\"#009051\">string</font>：就是JavaScript的string；<br></font></li><li><font face=\"Menlo\"><font color=\"#009051\">null</font>：就是JavaScript的null；<br></font></li><li><font face=\"Menlo\"><font color=\"#009051\">array</font>：就是JavaScript的Array表示方式——[]；<br></font></li><li><font face=\"Menlo\"><font color=\"#009051\">object</font>：就是JavaScript的{ ... }表示方式。</font><br></li></ul></span></span></span></p>"
    },
    {
      "type": "text",
      "data": "<strong style=\"white-space: pre-wrap; box-sizing: border-box;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\"><font face=\"Menlo\">COOKIE</font></span></strong><br><p cid=\"n77\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><span class=\"md-line md-end-block\" cid=\"n78\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" style=\"box-sizing: border-box;\"><font face=\"Menlo\">  服务器在设置Cookie时可以使用httpOnly，设定了httpOnly的Cookie将不能被JavaScript读取。这个行为由浏览器实现，主流浏览器均支持httpOnly选项，IE从IE6 SP1开始支持。</font></span></span></p><p cid=\"n79\" mdtype=\"paragraph\" style=\"box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; margin: 0.8em 0px; width: inherit; position: relative; white-space: pre-wrap; background-color: rgb(255, 255, 255);\"><span class=\"md-line md-end-block md-focus\" cid=\"n80\" mdtype=\"line\" style=\"box-sizing: border-box; display: block;\"><span md-inline=\"plain\" class=\"\" style=\"box-sizing: border-box;\"><font face=\"Menlo\">  为了确保安全，服务器端在设置Cookie时，应该始终坚持使用httpOnly</font></span></span></p>"
    }
  ]
}